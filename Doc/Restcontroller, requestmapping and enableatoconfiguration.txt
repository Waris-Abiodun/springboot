The @RestController and @RequestMapping Annotations
The first annotation on our MyApplication class is @RestController. This is known as a stereotype
annotation. It provides hints for people reading the code and for Spring that the class plays a
specific role. In this case, our class is a web @Controller, so Spring considers it when handling
15
incoming web requests.
The @RequestMapping annotation provides “routing” information. It tells Spring that any HTTP
request with the / path should be mapped to the home method. The @RestController annotation tells
Spring to render the resulting string directly back to the caller.
TIP
The @RestController and @RequestMapping annotations are Spring MVC annotations
(they are not specific to Spring Boot). See the MVC section in the Spring Reference
Documentation for more details.
The @EnableAutoConfiguration Annotation
The second class-level annotation is @EnableAutoConfiguration. This annotation tells Spring Boot to
“guess” how you want to configure Spring, based on the jar dependencies that you have added.
Since spring-boot-starter-web added Tomcat and Spring MVC, the auto-configuration assumes that
you are developing a web application and sets up Spring accordingly.